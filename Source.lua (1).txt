local Library = {}

-- Configurações iniciais
Library.Version = "1.0.0"
Library.Author = "CLEITI6966"
Library.Theme = {
    Primary = Color3.fromRGB(155, 89, 182), -- Roxo
    Secondary = Color3.fromRGB(44, 44, 44),  -- Cinza escuro
    Background = Color3.fromRGB(37, 37, 37), -- Fundo
    Text = Color3.fromRGB(255, 255, 255),   -- Branco
    Discord = Color3.fromRGB(114, 137, 218)  -- Azul Discord
}

-- Variáveis internas
local Tabs = {}
local CurrentTab = nil
local ScreenGui = nil
local MainWindow = nil

-- Função para criar a GUI principal
function Library:CreateWindow(Title)
    -- Cria a ScreenGui
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "Cleiti6966HubsLibrary"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = game:GetService("CoreGui")

    -- Cria a janela principal
    MainWindow = Instance.new("Frame")
    MainWindow.Name = "MainWindow"
    MainWindow.Size = UDim2.new(0, 700, 0, 500)
    MainWindow.Position = UDim2.new(0.5, -350, 0.5, -250)
    MainWindow.BackgroundColor3 = Library.Theme.Background
    MainWindow.BorderSizePixel = 0
    MainWindow.ClipsDescendants = true
    MainWindow.Parent = ScreenGui

    -- Cria o cabeçalho da janela
    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Size = UDim2.new(1, 0, 0, 40)
    Header.Position = UDim2.new(0, 0, 0, 0)
    Header.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    Header.BorderSizePixel = 0
    Header.Parent = MainWindow

    -- Título da janela
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Size = UDim2.new(0, 200, 1, 0)
    TitleLabel.Position = UDim2.new(0, 20, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = Title or "CLEITI6966 HUBS LIBRARY"
    TitleLabel.TextColor3 = Library.Theme.Text
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 16
    TitleLabel.Parent = Header

    -- Autor
    local AuthorLabel = Instance.new("TextLabel")
    AuthorLabel.Name = "Author"
    AuthorLabel.Size = UDim2.new(0, 100, 1, 0)
    AuthorLabel.Position = UDim2.new(0, 220, 0, 0)
    AuthorLabel.BackgroundTransparency = 1
    AuthorLabel.Text = "by: " .. Library.Author
    AuthorLabel.TextColor3 = Library.Theme.Primary
    AuthorLabel.TextXAlignment = Enum.TextXAlignment.Left
    AuthorLabel.Font = Enum.Font.Gotham
    AuthorLabel.TextSize = 12
    AuthorLabel.Parent = Header

    -- Botões de controle da janela
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -30, 0.5, -10)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 82, 82)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = ""
    CloseButton.Parent = Header
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Position = UDim2.new(1, -60, 0.5, -10)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 189, 46)
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Text = ""
    MinimizeButton.Parent = Header

    -- Barra de abas
    local TabBar = Instance.new("Frame")
    TabBar.Name = "TabBar"
    TabBar.Size = UDim2.new(0, 160, 1, -40)
    TabBar.Position = UDim2.new(0, 0, 0, 40)
    TabBar.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    TabBar.BorderSizePixel = 0
    TabBar.Parent = MainWindow

    -- Área de conteúdo
    local ContentArea = Instance.new("Frame")
    ContentArea.Name = "ContentArea"
    ContentArea.Size = UDim2.new(1, -160, 1, -40)
    ContentArea.Position = UDim2.new(0, 160, 0, 40)
    ContentArea.BackgroundColor3 = Library.Theme.Secondary
    ContentArea.BorderSizePixel = 0
    ContentArea.Parent = MainWindow

    -- Botão flutuante para minimizar
    local FloatingButton = Instance.new("TextButton")
    FloatingButton.Name = "FloatingButton"
    FloatingButton.Size = UDim2.new(0, 30, 0, 30)
    FloatingButton.Position = UDim2.new(0, 10, 0.5, -15)
    FloatingButton.BackgroundColor3 = Library.Theme.Primary
    FloatingButton.BorderColor3 = Library.Theme.Text
    FloatingButton.BorderSizePixel = 2
    FloatingButton.Text = ""
    FloatingButton.Visible = false
    FloatingButton.Parent = ScreenGui

    local MinimizeLine = Instance.new("Frame")
    MinimizeLine.Name = "MinimizeLine"
    MinimizeLine.Size = UDim2.new(0, 16, 0, 2)
    MinimizeLine.Position = UDim2.new(0.5, -8, 0.5, -1)
    MinimizeLine.BackgroundColor3 = Library.Theme.Text
    MinimizeLine.BorderSizePixel = 0
    MinimizeLine.Parent = FloatingButton

    -- Configurar eventos para minimizar
    local isMinimized = false
    MinimizeButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        if isMinimized then
            MainWindow.Visible = false
            FloatingButton.Visible = true
        else
            MainWindow.Visible = true
            FloatingButton.Visible = false
        end
    end)

    FloatingButton.MouseButton1Click:Connect(function()
        isMinimized = false
        MainWindow.Visible = true
        FloatingButton.Visible = false
    end)

    -- Retornar funções para adicionar abas e controles
    return {
        AddTab = function(TabName, Icon)
            return Library:AddTab(TabName, Icon)
        end,
        Close = function()
            ScreenGui:Destroy()
        end
    }
end

-- Função para adicionar uma nova aba
function Library:AddTab(TabName, Icon)
    local TabBar = MainWindow:FindFirstChild("TabBar")
    local ContentArea = MainWindow:FindFirstChild("ContentArea")
    
    if not TabBar or not ContentArea then return end
    
    local TabCount = #Tabs + 1
    
    -- Criar botão da aba
    local TabButton = Instance.new("TextButton")
    TabButton.Name = "Tab_" .. TabName
    TabButton.Size = UDim2.new(0, 140, 0, 40)
    TabButton.Position = UDim2.new(0, 10, 0, 60 + (TabCount - 1) * 50)
    TabButton.BackgroundColor3 = TabCount == 1 and Library.Theme.Primary or Library.Theme.Secondary
    TabButton.BorderSizePixel = 0
    TabButton.Text = ""
    TabButton.Parent = TabBar
    
    -- Ícone da aba
    if Icon then
        local TabIcon = Instance.new("ImageLabel")
        TabIcon.Name = "Icon"
        TabIcon.Size = UDim2.new(0, 20, 0, 20)
        TabIcon.Position = UDim2.new(0, 10, 0.5, -10)
        TabIcon.BackgroundTransparency = 1
        TabIcon.Image = Icon
        TabIcon.Parent = TabButton
    else
        local TabIcon = Instance.new("Frame")
        TabIcon.Name = "Icon"
        TabIcon.Size = UDim2.new(0, 20, 0, 20)
        TabIcon.Position = UDim2.new(0, 10, 0.5, -10)
        TabIcon.BackgroundColor3 = Library.Theme.Text
        TabIcon.BackgroundTransparency = 0.8
        TabIcon.Parent = TabButton
    end
    
    -- Texto da aba
    local TabText = Instance.new("TextLabel")
    TabText.Name = "Text"
    TabText.Size = UDim2.new(0, 80, 1, 0)
    TabText.Position = UDim2.new(0, 40, 0, 0)
    TabText.BackgroundTransparency = 1
    TabText.Text = TabName
    TabText.TextColor3 = Library.Theme.Text
    TabText.TextXAlignment = Enum.TextXAlignment.Left
    TabText.Font = Enum.Font.Gotham
    TabText.TextSize = 14
    TabText.Parent = TabButton
    
    -- Criar frame de conteúdo
    local TabContent = Instance.new("ScrollingFrame")
    TabContent.Name = "Tab_" .. TabName .. "_Content"
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.Position = UDim2.new(0, 0, 0, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.BorderSizePixel = 0
    TabContent.ScrollBarThickness = 5
    TabContent.Visible = TabCount == 1
    TabContent.Parent = ContentArea
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 10)
    UIListLayout.Parent = TabContent
    
    -- Configurar evento de clique
    TabButton.MouseButton1Click:Connect(function()
        for _, tab in pairs(Tabs) do
            tab.Button.BackgroundColor3 = Library.Theme.Secondary
            tab.Content.Visible = false
        end
        TabButton.BackgroundColor3 = Library.Theme.Primary
        TabContent.Visible = true
        CurrentTab = TabName
    end)
    
    -- Adicionar à lista de abas
    local TabData = {
        Name = TabName,
        Button = TabButton,
        Content = TabContent
    }
    
    table.insert(Tabs, TabData)
    
    if TabCount == 1 then
        CurrentTab = TabName
    end
    
    -- Retornar funções para adicionar controles
    return {
        AddSection = function(SectionName)
            return Library:AddSection(TabContent, SectionName)
        end,
        AddButton = function(ButtonName, Callback)
            return Library:AddButton(TabContent, ButtonName, Callback)
        end,
        AddToggle = function(ToggleName, Default, Callback)
            return Library:AddToggle(TabContent, ToggleName, Default, Callback)
        end,
        AddDropdown = function(DropdownName, Options, Default, Callback)
            return Library:AddDropdown(TabContent, DropdownName, Options, Default, Callback)
        end,
        AddSlider = function(SliderName, Min, Max, Default, Callback)
            return Library:AddSlider(TabContent, SliderName, Min, Max, Default, Callback)
        end,
        AddTextBox = function(TextBoxName, Placeholder, Callback)
            return Library:AddTextBox(TabContent, TextBoxName, Placeholder, Callback)
        end,
        AddLabel = function(LabelText)
            return Library:AddLabel(TabContent, LabelText)
        end,
        AddDiscordInvite = function(ServerId, ServerIcon, ServerName)
            return Library:AddDiscordInvite(TabContent, ServerId, ServerIcon, ServerName)
        end
    }
end

-- Função para adicionar uma seção
function Library:AddSection(Parent, SectionName)
    local Section = Instance.new("Frame")
    Section.Name = "Section"
    Section.Size = UDim2.new(1, -40, 0, 30)
    Section.Position = UDim2.new(0, 20, 0, 20)
    Section.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    Section.BorderSizePixel = 0
    Section.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = Section
    
    local SectionText = Instance.new("TextLabel")
    SectionText.Name = "Text"
    SectionText.Size = UDim2.new(1, -20, 1, 0)
    SectionText.Position = UDim2.new(0, 10, 0, 0)
    SectionText.BackgroundTransparency = 1
    SectionText.Text = SectionName
    SectionText.TextColor3 = Library.Theme.Text
    SectionText.TextXAlignment = Enum.TextXAlignment.Left
    SectionText.Font = Enum.Font.Gotham
    SectionText.TextSize = 14
    SectionText.Parent = Section
    
    return Section
end

-- Função para adicionar um parágrafo
function Library:AddParagraph(Parent, Title, Text)
    local Paragraph = Instance.new("Frame")
    Paragraph.Name = "Paragraph"
    Paragraph.Size = UDim2.new(1, -40, 0, 70)
    Paragraph.Position = UDim2.new(0, 20, 0, 20)
    Paragraph.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    Paragraph.BorderSizePixel = 0
    Paragraph.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = Paragraph
    
    local TitleText = Instance.new("TextLabel")
    TitleText.Name = "Title"
    TitleText.Size = UDim2.new(1, -20, 0, 20)
    TitleText.Position = UDim2.new(0, 10, 0, 10)
    TitleText.BackgroundTransparency = 1
    TitleText.Text = Title
    TitleText.TextColor3 = Library.Theme.Text
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    TitleText.Font = Enum.Font.GothamBold
    TitleText.TextSize = 14
    TitleText.Parent = Paragraph
    
    local ContentText = Instance.new("TextLabel")
    ContentText.Name = "Content"
    ContentText.Size = UDim2.new(1, -20, 0, 40)
    ContentText.Position = UDim2.new(0, 10, 0, 30)
    ContentText.BackgroundTransparency = 1
    ContentText.Text = Text
    ContentText.TextColor3 = Color3.fromRGB(170, 170, 170)
    ContentText.TextXAlignment = Enum.TextXAlignment.Left
    ContentText.Font = Enum.Font.Gotham
    ContentText.TextSize = 12
    ContentText.TextWrapped = true
    ContentText.Parent = Paragraph
    
    return Paragraph
end

-- Função para adicionar um botão
function Library:AddButton(Parent, ButtonName, Callback)
    local ButtonContainer = Instance.new("Frame")
    ButtonContainer.Name = "Button_" .. ButtonName
    ButtonContainer.Size = UDim2.new(1, -40, 0, 40)
    ButtonContainer.Position = UDim2.new(0, 20, 0, 20)
    ButtonContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    ButtonContainer.BorderSizePixel = 0
    ButtonContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = ButtonContainer
    
    local Button = Instance.new("TextButton")
    Button.Name = "Button"
    Button.Size = UDim2.new(0, 120, 0, 20)
    Button.Position = UDim2.new(0, 10, 0.5, -10)
    Button.BackgroundColor3 = Library.Theme.Primary
    Button.BorderSizePixel = 0
    Button.Text = ButtonName
    Button.TextColor3 = Library.Theme.Text
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 12
    Button.Parent = ButtonContainer
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 5)
    ButtonCorner.Parent = Button
    
    -- Configurar evento de clique
    if Callback then
        Button.MouseButton1Click:Connect(Callback)
    end
    
    return Button
end

-- Função para adicionar um toggle
function Library:AddToggle(Parent, ToggleName, Default, Callback)
    local ToggleContainer = Instance.new("Frame")
    ToggleContainer.Name = "Toggle_" .. ToggleName
    ToggleContainer.Size = UDim2.new(1, -40, 0, 40)
    ToggleContainer.Position = UDim2.new(0, 20, 0, 20)
    ToggleContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    ToggleContainer.BorderSizePixel = 0
    ToggleContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = ToggleContainer
    
    local ToggleText = Instance.new("TextLabel")
    ToggleText.Name = "Text"
    ToggleText.Size = UDim2.new(0, 200, 1, 0)
    ToggleText.Position = UDim2.new(0, 10, 0, 0)
    ToggleText.BackgroundTransparency = 1
    ToggleText.Text = ToggleName
    ToggleText.TextColor3 = Library.Theme.Text
    ToggleText.TextXAlignment = Enum.TextXAlignment.Left
    ToggleText.Font = Enum.Font.Gotham
    ToggleText.TextSize = 14
    ToggleText.Parent = ToggleContainer
    
    local ToggleButton = Instance.new("Frame")
    ToggleButton.Name = "Toggle"
    ToggleButton.Size = UDim2.new(0, 30, 0, 20)
    ToggleButton.Position = UDim2.new(1, -40, 0.5, -10)
    ToggleButton.BackgroundColor3 = Default and Library.Theme.Primary or Color3.fromRGB(70, 70, 70)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Parent = ToggleContainer
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 10)
    ToggleCorner.Parent = ToggleButton
    
    local ToggleCircle = Instance.new("Frame")
    ToggleCircle.Name = "Circle"
    ToggleCircle.Size = UDim2.new(0, 16, 0, 16)
    ToggleCircle.Position = Default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    ToggleCircle.BackgroundColor3 = Library.Theme.Text
    ToggleCircle.BorderSizePixel = 0
    ToggleCircle.Parent = ToggleButton
    
    local CircleCorner = Instance.new("UICorner")
    CircleCorner.CornerRadius = UDim.new(0, 8)
    CircleCorner.Parent = ToggleCircle
    
    local isToggled = Default or false
    
    -- Configurar evento de clique
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        ToggleButton.BackgroundColor3 = isToggled and Library.Theme.Primary or Color3.fromRGB(70, 70, 70)
        ToggleCircle.Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        
        if Callback then
            Callback(isToggled)
        end
    end)
    
    return {
        Set = function(Value)
            isToggled = Value
            ToggleButton.BackgroundColor3 = isToggled and Library.Theme.Primary or Color3.fromRGB(70, 70, 70)
            ToggleCircle.Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        end,
        Get = function()
            return isToggled
        end
    }
end

-- Função para adicionar um dropdown
function Library:AddDropdown(Parent, DropdownName, Options, Default, Callback)
    local DropdownContainer = Instance.new("Frame")
    DropdownContainer.Name = "Dropdown_" .. DropdownName
    DropdownContainer.Size = UDim2.new(1, -40, 0, 40)
    DropdownContainer.Position = UDim2.new(0, 20, 0, 20)
    DropdownContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    DropdownContainer.BorderSizePixel = 0
    DropdownContainer.ClipsDescendants = true
    DropdownContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = DropdownContainer
    
    local DropdownText = Instance.new("TextLabel")
    DropdownText.Name = "Text"
    DropdownText.Size = UDim2.new(0, 200, 0, 40)
    DropdownText.Position = UDim2.new(0, 10, 0, 0)
    DropdownText.BackgroundTransparency = 1
    DropdownText.Text = DropdownName
    DropdownText.TextColor3 = Library.Theme.Text
    DropdownText.TextXAlignment = Enum.TextXAlignment.Left
    DropdownText.Font = Enum.Font.Gotham
    DropdownText.TextSize = 14
    DropdownText.Parent = DropdownContainer
    
    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Size = UDim2.new(0, 110, 0, 20)
    DropdownButton.Position = UDim2.new(1, -120, 0.5, -10)
    DropdownButton.BackgroundColor3 = Color3.fromRGB(51, 51, 51)
    DropdownButton.BorderColor3 = Library.Theme.Primary
    DropdownButton.BorderSizePixel = 2
    DropdownButton.Text = Default or Options[1] or "Select"
    DropdownButton.TextColor3 = Library.Theme.Text
    DropdownButton.Font = Enum.Font.Gotham
    DropdownButton.TextSize = 12
    DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
    DropdownButton.Parent = DropdownContainer
    
    local DropdownCorner = Instance.new("UICorner")
    DropdownCorner.CornerRadius = UDim.new(0, 5)
    DropdownCorner.Parent = DropdownButton
    
    local DropdownArrow = Instance.new("TextLabel")
    DropdownArrow.Name = "Arrow"
    DropdownArrow.Size = UDim2.new(0, 20, 1, 0)
    DropdownArrow.Position = UDim2.new(1, -20, 0, 0)
    DropdownArrow.BackgroundTransparency = 1
    DropdownArrow.Text = "▼"
    DropdownArrow.TextColor3 = Library.Theme.Text
    DropdownArrow.Font = Enum.Font.Gotham
    DropdownArrow.TextSize = 12
    DropdownArrow.Parent = DropdownButton
    
    local DropdownList = Instance.new("ScrollingFrame")
    DropdownList.Name = "DropdownList"
    DropdownList.Size = UDim2.new(0, 110, 0, 0)
    DropdownList.Position = UDim2.new(1, -120, 0.5, 10)
    DropdownList.BackgroundColor3 = Color3.fromRGB(51, 51, 51)
    DropdownList.BorderSizePixel = 0
    DropdownList.ScrollBarThickness = 5
    DropdownList.Visible = false
    DropdownList.Parent = DropdownContainer
    
    local ListLayout = Instance.new("UIListLayout")
    ListLayout.Padding = UDim.new(0, 2)
    ListLayout.Parent = DropdownList
    
    local isOpen = false
    local selectedOption = Default or Options[1] or nil
    
    -- Preencher a lista de opções
    for i, option in ipairs(Options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Name = "Option_" .. option
        OptionButton.Size = UDim2.new(1, 0, 0, 20)
        OptionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        OptionButton.BorderSizePixel = 0
        OptionButton.Text = option
        OptionButton.TextColor3 = Library.Theme.Text
        OptionButton.Font = Enum.Font.Gotham
        OptionButton.TextSize = 12
        OptionButton.Parent = DropdownList
        
        OptionButton.MouseButton1Click:Connect(function()
            selectedOption = option
            DropdownButton.Text = option
            isOpen = false
            DropdownList.Visible = false
            DropdownList.Size = UDim2.new(0, 110, 0, 0)
            
            if Callback then
                Callback(option)
            end
        end)
    end
    
    -- Configurar evento para abrir/fechar o dropdown
    DropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        DropdownList.Visible = isOpen
        DropdownList.Size = isOpen and UDim2.new(0, 110, 0, math.min(#Options * 22, 110)) or UDim2.new(0, 110, 0, 0)
        DropdownArrow.Text = isOpen and "▲" or "▼"
    end)
    
    return {
        Set = function(Option)
            if table.find(Options, Option) then
                selectedOption = Option
                DropdownButton.Text = Option
            end
        end,
        Get = function()
            return selectedOption
        end,
        AddOption = function(Option)
            table.insert(Options, Option)
            
            local OptionButton = Instance.new("TextButton")
            OptionButton.Name = "Option_" .. option
            OptionButton.Size = UDim2.new(1, 0, 0, 20)
            OptionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            OptionButton.BorderSizePixel = 0
            OptionButton.Text = option
            OptionButton.TextColor3 = Library.Theme.Text
            OptionButton.Font = Enum.Font.Gotham
            OptionButton.TextSize = 12
            OptionButton.Parent = DropdownList
            
            OptionButton.MouseButton1Click:Connect(function()
                selectedOption = option
                DropdownButton.Text = option
                isOpen = false
                DropdownList.Visible = false
                DropdownList.Size = UDim2.new(0, 110, 0, 0)
                
                if Callback then
                    Callback(option)
                end
            end)
        end
    }
end

-- Função para adicionar um slider
function Library:AddSlider(Parent, SliderName, Min, Max, Default, Callback)
    local SliderContainer = Instance.new("Frame")
    SliderContainer.Name = "Slider_" .. SliderName
    SliderContainer.Size = UDim2.new(1, -40, 0, 60)
    SliderContainer.Position = UDim2.new(0, 20, 0, 20)
    SliderContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    SliderContainer.BorderSizePixel = 0
    SliderContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = SliderContainer
    
    local SliderText = Instance.new("TextLabel")
    SliderText.Name = "Text"
    SliderText.Size = UDim2.new(0, 200, 0, 20)
    SliderText.Position = UDim2.new(0, 10, 0, 5)
    SliderText.BackgroundTransparency = 1
    SliderText.Text = SliderName
    SliderText.TextColor3 = Library.Theme.Text
    SliderText.TextXAlignment = Enum.TextXAlignment.Left
    SliderText.Font = Enum.Font.Gotham
    SliderText.TextSize = 14
    SliderText.Parent = SliderContainer
    
    local SliderTrack = Instance.new("Frame")
    SliderTrack.Name = "Track"
    SliderTrack.Size = UDim2.new(0, 400, 0, 10)
    SliderTrack.Position = UDim2.new(0, 10, 0, 35)
    SliderTrack.BackgroundColor3 = Color3.fromRGB(51, 51, 51)
    SliderTrack.BorderSizePixel = 0
    SliderTrack.Parent = SliderContainer
    
    local TrackCorner = Instance.new("UICorner")
    TrackCorner.CornerRadius = UDim.new(0, 5)
    TrackCorner.Parent = SliderTrack
    
    local SliderFill = Instance.new("Frame")
    SliderFill.Name = "Fill"
    SliderFill.Size = UDim2.new(0, 200, 1, 0)
    SliderFill.Position = UDim2.new(0, 0, 0, 0)
    SliderFill.BackgroundColor3 = Library.Theme.Primary
    SliderFill.BorderSizePixel = 0
    SliderFill.Parent = SliderTrack
    
    local FillCorner = Instance.new("UICorner")
    FillCorner.CornerRadius = UDim.new(0, 5)
    FillCorner.Parent = SliderFill
    
    local SliderThumb = Instance.new("Frame")
    SliderThumb.Name = "Thumb"
    SliderThumb.Size = UDim2.new(0, 16, 0, 16)
    SliderThumb.Position = UDim2.new(0, 194, 0, -3)
    SliderThumb.BackgroundColor3 = Library.Theme.Text
    SliderThumb.BorderColor3 = Library.Theme.Primary
    SliderThumb.BorderSizePixel = 2
    SliderThumb.Parent = SliderTrack
    
    local ThumbCorner = Instance.new("UICorner")
    ThumbCorner.CornerRadius = UDim.new(0, 8)
    ThumbCorner.Parent = SliderThumb
    
    local ValueText = Instance.new("TextLabel")
    ValueText.Name = "Value"
    ValueText.Size = UDim2.new(0, 50, 0, 20)
    ValueText.Position = UDim2.new(1, -60, 0, 35)
    ValueText.BackgroundTransparency = 1
    ValueText.Text = tostring(Default or math.floor((Min + Max) / 2))
    ValueText.TextColor3 = Library.Theme.Text
    ValueText.Font = Enum.Font.Gotham
    ValueText.TextSize = 12
    ValueText.Parent = SliderContainer
    
    local currentValue = Default or math.floor((Min + Max) / 2)
    local isDragging = false
    
    -- Função para atualizar o slider
    local function updateSlider(value)
        currentValue = math.clamp(value, Min, Max)
        local percent = (currentValue - Min) / (Max - Min)
        SliderFill.Size = UDim2.new(0, percent * 400, 1, 0)
        SliderThumb.Position = UDim2.new(0, percent * 400 - 8, 0, -3)
        ValueText.Text = tostring(math.floor(currentValue))
        
        if Callback then
            Callback(currentValue)
        end
    end
    
    -- Configurar eventos de arrastar
    SliderThumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
        end
    end)
    
    SliderThumb.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePos = input.Position.X
            local sliderPos = SliderTrack.AbsolutePosition.X
            local sliderSize = SliderTrack.AbsoluteSize.X
            local relativePos = math.clamp(mousePos - sliderPos, 0, sliderSize)
            local percent = relativePos / sliderSize
            local value = Min + (Max - Min) * percent
            updateSlider(value)
        end
    end)
    
    -- Configurar clique na trilha
    SliderTrack.MouseButton1Click:Connect(function(input)
        local mousePos = input.Position.X
        local sliderPos = SliderTrack.AbsolutePosition.X
        local sliderSize = SliderTrack.AbsoluteSize.X
        local relativePos = math.clamp(mousePos - sliderPos, 0, sliderSize)
        local percent = relativePos / sliderSize
        local value = Min + (Max - Min) * percent
        updateSlider(value)
    end)
    
    -- Definir valor inicial
    updateSlider(currentValue)
    
    return {
        Set = function(Value)
            updateSlider(Value)
        end,
        Get = function()
            return currentValue
        end
    }
end

-- Função para adicionar uma caixa de texto
function Library:AddTextBox(Parent, TextBoxName, Placeholder, Callback)
    local TextBoxContainer = Instance.new("Frame")
    TextBoxContainer.Name = "TextBox_" .. TextBoxName
    TextBoxContainer.Size = UDim2.new(1, -40, 0, 40)
    TextBoxContainer.Position = UDim2.new(0, 20, 0, 20)
    TextBoxContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    TextBoxContainer.BorderSizePixel = 0
    TextBoxContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = TextBoxContainer
    
    local TextBoxText = Instance.new("TextLabel")
    TextBoxText.Name = "Text"
    TextBoxText.Size = UDim2.new(0, 200, 0, 40)
    TextBoxText.Position = UDim2.new(0, 10, 0, 0)
    TextBoxText.BackgroundTransparency = 1
    TextBoxText.Text = TextBoxName
    TextBoxText.TextColor3 = Library.Theme.Text
    TextBoxText.TextXAlignment = Enum.TextXAlignment.Left
    TextBoxText.Font = Enum.Font.Gotham
    TextBoxText.TextSize = 14
    TextBoxText.Parent = TextBoxContainer
    
    local InputBox = Instance.new("TextBox")
    InputBox.Name = "Input"
    InputBox.Size = UDim2.new(0, 110, 0, 20)
    InputBox.Position = UDim2.new(1, -120, 0.5, -10)
    InputBox.BackgroundColor3 = Color3.fromRGB(51, 51, 51)
    InputBox.BorderColor3 = Library.Theme.Primary
    InputBox.BorderSizePixel = 2
    InputBox.PlaceholderText = Placeholder or "< Input >"
    InputBox.PlaceholderColor3 = Color3.fromRGB(170, 170, 170)
    InputBox.Text = ""
    InputBox.TextColor3 = Library.Theme.Text
    InputBox.Font = Enum.Font.Gotham
    InputBox.TextSize = 12
    InputBox.Parent = TextBoxContainer
    
    local InputCorner = Instance.new("UICorner")
    InputCorner.CornerRadius = UDim.new(0, 5)
    InputCorner.Parent = InputBox
    
    -- Configurar evento de focus perdido
    if Callback then
        InputBox.FocusLost:Connect(function()
            Callback(InputBox.Text)
        end)
    end
    
    return {
        Set = function(Text)
            InputBox.Text = Text
        end,
        Get = function()
            return InputBox.Text
        end
    }
end

-- Função para adicionar um rótulo de texto
function Library:AddLabel(Parent, LabelText)
    local Label = Instance.new("TextLabel")
    Label.Name = "Label"
    Label.Size = UDim2.new(1, -40, 0, 20)
    Label.Position = UDim2.new(0, 20, 0, 20)
    Label.BackgroundTransparency = 1
    Label.Text = LabelText
    Label.TextColor3 = Library.Theme.Text
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 14
    Label.Parent = Parent
    
    return Label
end

-- Função para adicionar um convite do Discord
function Library:AddDiscordInvite(Parent, ServerId, ServerIcon, ServerName)
    local InviteContainer = Instance.new("Frame")
    InviteContainer.Name = "DiscordInvite"
    InviteContainer.Size = UDim2.new(1, -40, 0, 40)
    InviteContainer.Position = UDim2.new(0, 20, 0, 20)
    InviteContainer.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
    InviteContainer.BorderSizePixel = 0
    InviteContainer.Parent = Parent
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 5)
    Corner.Parent = InviteContainer
    
    local DiscordIcon = Instance.new("ImageLabel")
    DiscordIcon.Name = "Icon"
    DiscordIcon.Size = UDim2.new(0, 20, 0, 20)
    DiscordIcon.Position = UDim2.new(0, 10, 0.5, -10)
    DiscordIcon.BackgroundColor3 = Library.Theme.Discord
    DiscordIcon.BorderSizePixel = 0
    DiscordIcon.Image = ServerIcon or "rbxassetid://3926305904"
    DiscordIcon.Parent = InviteContainer
    
    local IconCorner = Instance.new("UICorner")
    IconCorner.CornerRadius = UDim.new(0, 10)
    IconCorner.Parent = DiscordIcon
    
    local DiscordText = Instance.new("TextLabel")
    DiscordText.Name = "Text"
    DiscordText.Size = UDim2.new(0, 200, 1, 0)
    DiscordText.Position = UDim2.new(0, 40, 0, 0)
    DiscordText.BackgroundTransparency = 1
    DiscordText.Text = ServerName or "Discord"
    DiscordText.TextColor3 = Library.Theme.Text
    DiscordText.TextXAlignment = Enum.TextXAlignment.Left
    DiscordText.Font = Enum.Font.Gotham
    DiscordText.TextSize = 14
    DiscordText.Parent = InviteContainer
    
    local CopyButton = Instance.new("TextButton")
    CopyButton.Name = "CopyButton"
    CopyButton.Size = UDim2.new(0, 80, 0, 20)
    CopyButton.Position = UDim2.new(1, -90, 0.5, -10)
    CopyButton.BackgroundColor3 = Library.Theme.Discord
    CopyButton.BorderSizePixel = 0
    CopyButton.Text = "Copiar Link"
    CopyButton.TextColor3 = Library.Theme.Text
    CopyButton.Font = Enum.Font.Gotham
    CopyButton.TextSize = 12
    CopyButton.Parent = InviteContainer
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 5)
    ButtonCorner.Parent = CopyButton
    
    -- Configurar evento de clique
    CopyButton.MouseButton1Click:Connect(function()
        local inviteLink = "https://discord.gg/" .. (ServerId or "invite")
        setclipboard(inviteLink)
        
        -- Mostrar feedback visual
        local originalText = CopyButton.Text
        CopyButton.Text = "Copiado!"
        wait(1)
        CopyButton.Text = originalText
    end)
    
    return {
        SetServerId = function(NewId)
            ServerId = NewId
        end,
        SetServerName = function(NewName)
            DiscordText.Text = NewName
        end,
        SetServerIcon = function(NewIcon)
            DiscordIcon.Image = NewIcon
        end
    }
end

return Library
